// Code generated by ent, DO NOT EDIT.

package shoppingcart

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the shoppingcart type in the database.
	Label = "shopping_cart"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "userid"
	// FieldItemCount holds the string denoting the item_count field in the database.
	FieldItemCount = "item_count"
	// FieldLastUpdateTimestamp holds the string denoting the last_update_timestamp field in the database.
	FieldLastUpdateTimestamp = "last_update_timestamp"
	// Table holds the table name of the shoppingcart in the database.
	Table = "shopping_carts"
)

// Columns holds all SQL columns for shoppingcart fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldItemCount,
	FieldLastUpdateTimestamp,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultItemCount holds the default value on creation for the "item_count" field.
	DefaultItemCount int
	// DefaultLastUpdateTimestamp holds the default value on creation for the "last_update_timestamp" field.
	DefaultLastUpdateTimestamp func() time.Time
	// UpdateDefaultLastUpdateTimestamp holds the default value on update for the "last_update_timestamp" field.
	UpdateDefaultLastUpdateTimestamp func() time.Time
)

// OrderOption defines the ordering options for the ShoppingCart queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUserID orders the results by the user_id field.
func ByUserID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserID, opts...).ToFunc()
}

// ByItemCount orders the results by the item_count field.
func ByItemCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldItemCount, opts...).ToFunc()
}

// ByLastUpdateTimestamp orders the results by the last_update_timestamp field.
func ByLastUpdateTimestamp(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastUpdateTimestamp, opts...).ToFunc()
}
